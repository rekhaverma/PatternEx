@import 'xbem';
@import 'theme';

@include block('formGroup') {
  @include flex($direction: column);
  margin-bottom: 15px;

  @include state('no-bottom') {
    margin-bottom: 0;
  }

  @include element('label') {
    margin: 0 0 5px 0;
    font-size: setFontSizeNew('h4');
    line-height: 20px;

    @include setFontFamily('firaSans');
  }
}

@include block('input') {
  border: 1px solid setColor('silver');
  background: transparent;
  height: 35px;
  color: setColor('silver');
  border-radius: 0;
  padding: 6px 12px;
  font-size: setFontSizeNew('h4');
  line-height: 1.42857143;
  @include prefix(box-shadow, inset 0 1px 1px setColor('black', 0.075));
  @include prefix(transition, "border-color ease-in-out .15s,box-shadow ease-in-out .15s");

  @include state('error') {
    border: 1px solid setColor('orange-rose');
  }

  @include modifier('v2') {
    border: none;
    border-bottom: 1px solid setColor('silver');

    color: setColor('white');
    font-size: setFontSizeNew('h5','big');
    font-weight: setFontWeight('book');

    outline: none;

  }

}

input:disabled {
  cursor: not-allowed;
}

@include block('inputSearch') {
  border: none;
  background: transparent;
  color: setColor('white');
  font-size: setFontSizeNew('h5','big');
  font-weight: setFontWeight('book');
  outline: none;
}

@include block('validationGroup') {
  @include flex($direction: column);
  margin-bottom: 15px;

  @include element('errors') {
    @include flex($direction: column);

    span {
      color: setColor('orange-rose');
      font-size: setFontSizeNew('h4');
      line-height: 20px;

      @include setFontFamily('firaSans');
    }
  }
}

@include block('checkbox') {
  width: 14px;
  height: 14px;
  position: relative;
  display: flex;
  margin-bottom: 1rem;
  border: 1px solid setColor('white');
  background: transparent;
  .check-label {
    margin-left: setMultipliedSize(4);
    font-size: setFontSizeNew('h5','big');
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: inline-block;
  }
  .check-tick {
    width: 9px;
    height: 7px;
    cursor: pointer;
    position: absolute;
    left: 2px;
    top: 1px;
    background: linear-gradient(top, #222 0%, setColor('black') 100%); // todo: use function to set the color
    &:after {
      content: '';
      width: 7px;
      height: 4px;
      position: absolute;
      top: 1px;
      left: -1px;
      border: 2px solid setColor('white');
      border-top: none;
      border-right: none;
      background: transparent;
      opacity: 0;
      transform: rotate(-45deg);
    }
    &:hover::after {
      opacity: 0.3;
    }
  }
  input[type=checkbox] {
    visibility: hidden;
    &:checked + label:after {
      opacity: 1;
    }
  }
}

@include block('radio') {

  margin-bottom: 1rem;
  input[type="radio"] {
    position: absolute;
    opacity: 0;
    z-index: 1000;
    cursor: pointer;
    + .radio-label {
      &:before {
        content: '';
        background: setColor('black');
        border-radius: 100%;
        border: 1px solid darken(setColor('white'), 25%);
        display: inline-block;
        width: 1.4em;
        height: 1.4em;
        position: relative;
        top: -0.2em;
        margin-right: 1em;
        vertical-align: top;
        cursor: pointer;
        text-align: center;
        transition: all 250ms ease;
      }
    }
    &:checked {
      + .radio-label {
        &:before {
          background-color: setColor('white');
          box-shadow: inset 0 0 0 4px setColor('black');
        }
      }
    }
    &:focus {
      + .radio-label {
        &:before {
          outline: none;
          border-color: setColor('white');
        }
      }
    }
    &:disabled {
      + .radio-label {
        &:before {
          box-shadow: inset 0 0 0 4px setColor('white');
          border-color: darken(setColor('white'), 25%);
          background: darken(setColor('black'), 25%);
        }
      }
    }
    + .radio-label {
      &:empty {
        &:before {
          margin-right: 0;
        }
      }
    }
  }
  .radio-label {
    font-size: 12px;
    font-weight: bold;
    line-height: 1.12;
  }
}


@include block('button') {
  min-height: 25px;
  margin: setMultipliedSize(1, -1);
  padding: setMultipliedSize(2) setMultipliedSize(4);

  @include radius(
    setRadius('normal'),
    setRadius('normal'),
    setRadius('normal'),
    setRadius('normal')
  );
  border: 0;

  font-size: setFontSizeNew('h5','big');
  font-weight: setFontWeight('bold');
  color: setColor('white');
  background: setColor('default-dark');

  cursor: pointer;

  @include modifier('dark') {
    padding: setMultipliedSize(2) setMultipliedSize(4);
    color: setColor('white');
    border: solid 1px setColor('light-grey');
    background: transparent;

    &:hover, &:active {
      background: setColor('light-grey');
    }
    &:active {
      box-shadow: inset 0 1px 5px 0 setColor('black', 0.5);
    }
    &:disabled {
      opacity: 0.65;
      cursor: default;
    }
  }

  @include modifier('success') {
    background: setColor('orange');

    &:hover, &:active {
      background: setColor('hover-orange');
    }
    &:active {
      box-shadow: inset 0 1px 5px 0 setColor('black', 0.5);
    }
    &:disabled {
      opacity: 0.5;
      cursor: default;
    }
  }

  @include state('small') {
    font-size: setFontSizeNew('h5','big');
    padding: setMultipliedSize(1, -1) setMultipliedSize(2);
  }

  @include state('medium') {
    font-size: setFontSizeNew('h5','big');
    padding: setMultipliedSize() setMultipliedSize(4) setMultipliedSize(1, 1);
  }

  @include state('tableButton') {
    min-height: 17px;
    margin: 0;
    font-size: setFontSizeNew('h5');
    padding: 2px 7px;
  }

  @include modifier('link') {
    color: setColor('white');
    background-color: transparent;
    text-decoration: underline;

    &:hover, &:active {
      color: setColor('hover-orange');
    }
    &:disabled {
      opacity: 0.65;
    }
  }
}

@include block('textarea') {
  width: 100%;

  padding: setMultipliedSize(1, -3);
  border: 1px solid setColor('mid-grey');

  background-color: transparent;

  color: setColor('white');
  font-size: setFontSizeNew('h5','big');
  font-weight: setFontWeight('book');

  resize: none;

  @include prefix(border-radius, setRadius('medium'));
}

@include block('select') {
  position: relative;
  width: 100%;

  border-bottom: 1px solid setColor('silver');

  color: setColor('white');
  font-size: setFontSizeNew('h5','big');
  font-weight: setFontWeight('book');

  @include flex(row);

  @include element('label') {
    width: 100%;
    height: 34px;
    padding: setMultipliedSize(2);

    justify-content: center;
    cursor: pointer;

    @include flex();
  }

  @include element('floatingLabel') {
    position: absolute;
    pointer-events: none;
    top: setMultipliedSize(-2, 2);
    font-size: setFontSizeNew('h5');
    color: setColor('mid-grey');
    padding-left: setMultipliedSize(2, -2);
  }

  @include element('list') {
    position: absolute;
    left: 0;
    top: 40px;
    width: 100%;
    border: 1px solid setColor('mid-grey');
    background-color: setColor('cod-grey');

    @include prefix(border-radius, setRadius('medium'));
  }

  @include element('item') {
    width: 100%;
    padding: setMultipliedSize(2);

    color: setColor('white');
    font-size: setFontSizeNew('h5','big');
    font-weight: setFontWeight('book');

    cursor: pointer;

    &:hover {
      background-color: setColor('orange');
    }
  }
}

@include block('formErrors') {
  color: setColor('red');
}

@include block('materialInput') {
  position:relative;

  @include element('input') {
    width: 100%;
    border: none;
    border-bottom: 1px solid setColor('silver');
    color: setColor('white');
    font-size: setFontSizeNew('h5','big');
    font-weight: setFontWeight('book');
    outline: none;
    background: transparent;
    height: 35px;
    border-radius: 0;
    padding: setMultipliedSize(1, 1) 0;
    @include prefix(box-shadow, inset 0 1px 1px setColor('black', 0.075));
    @include prefix(transition, "border-color ease-in-out .15s,box-shadow ease-in-out .15s");

    &:focus ~ label, &:valid ~ label {
      left: 0;
      top: setMultipliedSize(-2, 2);
      font-size: setMultipliedSize(2);
      color: setColor('mid-grey');
    }
  }

  @include element('label') {
    color: setColor('silver');
    font-size: setFontSizeNew('h5','big');
    font-weight: normal;
    position: absolute;
    pointer-events: none;
    left: setMultipliedSize();
    top: setMultipliedSize(2);
    @include prefix(transition, "0.2s ease all");
  }
}
