// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DomainInfoCard /> render:  should match with snapshot 1`] = `
<DomainInfoCard
  domainInfoData={
    Object {
      "cdn_info": "Amazon Cloudfront",
      "community_tag": "not malicious",
      "community_votes": 1,
      "expiration_date": "2022-10-31 04:00:00",
      "geo_location": Object {
        "address": "P.O. Box 8102",
        "city": "Reno",
        "country": "US",
        "state": "NV",
        "zipcode": "89507",
      },
      "handlers": Object {
        "openResolution": [Function],
        "openSubdomains": [Function],
      },
      "registrar": "MarkMonitor, Inc.",
      "registration_date": "1994-11-01 05:00:00",
      "resolutions": Array [
        Object {
          "ip_address": "205.251.242.54",
          "last_resolved": "2013-08-27",
        },
        Object {
          "ip_address": "72.21.215.232",
          "last_resolved": "2014-10-24",
        },
      ],
      "subdomains": Array [
        "gru-orca.amazon.com",
        "vdp.amazon.com",
      ],
    }
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {
        "autocorrelation.backToDashboard": "Back to Dashboard",
        "autocorrelation.toolbar": "Select a cluster from the list",
        "autocorrelations.footerText": "Choose Cluster from list to view details",
        "autocorrelations.toAutocorrelations": "See Autocorrelations",
        "autocorrelations.toAutocorrelationsCluster": "See Cluster Details",
        "behavior.malicious.table.actions": "Actions",
        "behavior.malicious.table.alias_name": "Model Alias",
        "behavior.malicious.table.create_time": "Processed Date",
        "behavior.malicious.table.description": "Description",
        "behavior.malicious.table.dip": "Destination IP",
        "behavior.malicious.table.domain": "Domain",
        "behavior.malicious.table.id": "Id",
        "behavior.malicious.table.related_entities": "Related Entities",
        "behavior.malicious.table.score": "Score",
        "behavior.malicious.table.sip": "Source IP",
        "behavior.malicious.table.tactic": "Tactic",
        "behavior.malicious.table.type": "Entity",
        "behavior.malicious.table.uid": "UID",
        "behavior.malicious.table.user": "User",
        "behavior.maliciousListingTitle": "Malicious Listing",
        "behavior.recordsFound": "Records found: {count}",
        "behavior.suspicious.table.actions": "Actions",
        "behavior.suspicious.table.alias_name": "Model Alias",
        "behavior.suspicious.table.create_time": "Processed Date",
        "behavior.suspicious.table.description": "Description",
        "behavior.suspicious.table.dip": "Destination IP",
        "behavior.suspicious.table.domain": "Domain",
        "behavior.suspicious.table.global_rank": "Global Rank",
        "behavior.suspicious.table.id": "Id",
        "behavior.suspicious.table.method_name": "Method Name",
        "behavior.suspicious.table.method_rank": "Method Rank",
        "behavior.suspicious.table.method_score": "Method Score",
        "behavior.suspicious.table.related_entities": "Related Entities",
        "behavior.suspicious.table.sip": "Source IP",
        "behavior.suspicious.table.start_time": "Log Date",
        "behavior.suspicious.table.tactic": "Tactic",
        "behavior.suspicious.table.type": "Entity",
        "behavior.suspicious.table.uid": "UID",
        "behavior.suspicious.table.user": "User",
        "behavior.suspiciousListingTitle": "Suspicious Listing",
        "behaviorSummary.legend.cluster": "Clusters",
        "behaviorSummary.legend.malicious": "Malicious",
        "behaviorSummary.legend.suspicious": "Suspicious",
        "card.autocorrelation.bottom": "Autocorrelation",
        "card.autocorrelation.main": "Autocorrelation",
        "card.labels.main": "<span style=\\"color: white\\">{count}</span> Labels",
        "card.labels.top": "Marked Items",
        "card.malicious.bottom": "Performance Report",
        "card.malicious.main": "<span style=\\"color: white\\">{count}</span> Malicious",
        "card.malicious.top": "Unsolved Alerts",
        "card.performance.bottom": "Monitoring Layout",
        "card.precisions.main": "<span style=\\"color: white\\">{count}</span> Precision",
        "card.precisions.top": "Overall Rating",
        "card.report.main": "Dashboard",
        "card.report.noContentTop": "No data for Selected Range",
        "card.report.top": "Last update {date}",
        "card.seeDetails": "See details",
        "card.suspicious.main": "<span style=\\"color: white\\">{count}</span> Suspicious",
        "card.suspicious.top": "Need your Attention",
        "cluster.metas.entities": "<span style=\\"color: white\\">{count}</span> Entities",
        "cluster.metas.mainEntity": "<span style=\\"color: #ff5d3a\\">{name}</span> main entity cluster",
        "cluster.metas.relations": "<span style=\\"color: white\\">{count}</span> Relations",
        "dashboard.filters.reset": "Reset Filters",
        "dashboard.reset": "Reset",
        "dateRange.from": "From: <span style=\\"color: white; font-weight: 500\\">{value}</span>",
        "dateRange.row.fromToUntil": "{valueFrom} to {valueUntil}",
        "dateRange.rowV2.fromToUntil": "<span style=\\"color: #A1A8A9\\">From: <span style=\\"color: white; font-weight: 500\\">{valueFrom}</span> / To: <span style=\\"color: white; font-weight: 500\\">{valueUntil}</span></span>",
        "dateRange.rowV2.label": "{label}",
        "dateRange.until": "Until: <span style=\\"color: white; font-weight: 500\\">{value}</span>",
        "default.search.string": "Search...",
        "evp.actual": "Actual",
        "evp.deviation": "Standard deviation",
        "evp.dhcp.table.date": "Date",
        "evp.dhcp.table.hostname": "Hostname",
        "evp.dhcp.table.ip": "IP",
        "evp.featureplotnote": "This plot compares feature values for this entity with the corresponding feature values of a representative sample of the population. The Distance from Mean (Z-score or Standard score) measures the number of standard deviations by which the feature value differs from the mean of the population. A high score (>3.0) indicates that the value is an outlier.",
        "evp.historical.table.addr_verify_fail": "Address Verified",
        "evp.historical.table.avg_duration": "Average Duration",
        "evp.historical.table.avg_interval": "Average Interval",
        "evp.historical.table.avg_src_distance": "Avg Distance",
        "evp.historical.table.bot_ratio": "Bot Score",
        "evp.historical.table.date": "Timestamp",
        "evp.historical.table.dest_ip_01_count_connections": "Number of Connections",
        "evp.historical.table.dest_ip_02_count_distinct_from_ips": "Number of IPs",
        "evp.historical.table.dest_ip_03_count_distinct_to_ports": "Distinct to Ports",
        "evp.historical.table.dest_ip_04_counter_applications": "Number of applications",
        "evp.historical.table.dest_ip_05_avg_duration": "Average Duration",
        "evp.historical.table.dest_ip_06_avg_interval": "Average Interval",
        "evp.historical.table.distinct_apps": "Distinct Apps",
        "evp.historical.table.domain": "Domain",
        "evp.historical.table.dstip": "Destination IP",
        "evp.historical.table.dstip_geo_location": "Geo Location",
        "evp.historical.table.email_sim": "Email Similarity",
        "evp.historical.table.id": "Id",
        "evp.historical.table.ipv4": "IP Address",
        "evp.historical.table.login_failure": "Failed Login",
        "evp.historical.table.login_success": "Succ. Login",
        "evp.historical.table.max_ipscore": "Max IP Score",
        "evp.historical.table.min_reqs_log_to_chkout": "Reqs to checkout",
        "evp.historical.table.num_addresschg": "Addr Change",
        "evp.historical.table.num_addrs": "Address Changes",
        "evp.historical.table.num_chkout": "Checkouts",
        "evp.historical.table.num_ipaddrs": "Num Ips",
        "evp.historical.table.num_locations": "Locations",
        "evp.historical.table.num_passwd": "Password Resets",
        "evp.historical.table.num_reqs": "Num Requests",
        "evp.historical.table.num_requests": "Num Requests",
        "evp.historical.table.num_ship_over_exped": "Shipping O/E",
        "evp.historical.table.num_userids": "User IDs",
        "evp.historical.table.predicted_prob": "Confidence",
        "evp.historical.table.predicted_tag": "Prediction",
        "evp.historical.table.reserved_ports": "Reserved ports",
        "evp.historical.table.score": "Outlier Score",
        "evp.historical.table.src_ip_01_distinct_dest_locations": "Number of Locations",
        "evp.historical.table.src_ip_03_count_connections": "Number of Connections",
        "evp.historical.table.src_ip_22_count_from_port_lt_1024": "Reserved Ports",
        "evp.historical.table.src_ip_31_counter_applications": "Distinct Apps",
        "evp.historical.table.src_ip_33_avg_interval": "Average Interval",
        "evp.historical.table.src_ip_34_avg_duration": "Average Duration",
        "evp.historical.table.src_ip_35_count_destination_ips": "# Dest IPs",
        "evp.historical.table.srcip": "Source IP",
        "evp.historical.table.succ_login": "Succ. Login",
        "evp.historical.table.tot_bytes_received": "Total Bytes Received",
        "evp.historical.table.tot_bytes_sent": "Total Bytes Sent",
        "evp.historical.table.tot_duration": "Total Duration",
        "evp.historical.table.tot_failed_auth": "Total Failed Auth",
        "evp.historical.table.tot_sessions": "Tot Sessions",
        "evp.historical.table.tot_successful_auth": "Total Successful Auth",
        "evp.historical.table.user": "User",
        "evp.historical.table.user_id": "User ID",
        "evp.logs.table.dns.query": "Query",
        "evp.logs.table.dns.response_code": "Response Code",
        "evp.logs.table.dns.source_ip": "Source IP",
        "evp.logs.table.dns.time_generated": "Time Generated",
        "evp.logs.table.dns.uid": "UID",
        "evp.logs.table.edr.date": "Date",
        "evp.logs.table.edr.hostname": "Hostname",
        "evp.logs.table.edr.ip": "IP",
        "evp.logs.table.edr.log_source": "Log Source",
        "evp.logs.table.edr.os": "OS",
        "evp.logs.table.edr.process_md5": "Process MD5",
        "evp.logs.table.edr.process_name": "Process Name",
        "evp.logs.table.edr.process_path": "Process Path",
        "evp.logs.table.edr.timestamp": "Timestamp",
        "evp.logs.table.edr.username": "Username",
        "evp.logs.table.external.asn_id": "ASN ID",
        "evp.logs.table.external.asn_provider": "ASN Provider",
        "evp.logs.table.external.dip": "DIP",
        "evp.logs.table.external.location": "Location",
        "evp.logs.table.fw.dst_port": "Dest Port",
        "evp.logs.table.fw.dstip": "Dest IP",
        "evp.logs.table.fw.id": "Id",
        "evp.logs.table.fw.srcip": "Source IP",
        "evp.logs.table.fw.timestamp": "UTC Time",
        "evp.mean": "Mean",
        "evp.noDataLabel": "No data available",
        "evp.nofeaturedata": "No feature selected. Select a feature.",
        "evp.percentiles": "25th to 75th Percentile",
        "evp.resolution": "Domain Resolution",
        "evp.seeDetails": "See Details",
        "evp.setLabel": "Set Label",
        "evp.showhidecards": "Show/Hide Cards",
        "evp.subdomains": "Subdomains",
        "evp.title": "Exploded view",
        "evp.toHistoricalBehaviourMap": "See Historical Behaviour Map",
        "evp.toVulnerabilityReportPage": "Check for more details",
        "filter.entity": "Filter by Entity",
        "filter.severity": "Filter by Severity",
        "footer.email": "support@patternex.com",
        "footer.info": "support@patternex.com  ::  ver {version}",
        "global.no": "No",
        "global.nodata": "There is no data to display",
        "global.yes": "Yes",
        "header.refresh": "Auto Refresh",
        "header.welcome": "Welcome, {user}",
        "heatmap.cluster.title": "Cluster Threat Tactics",
        "heatmap.legend.end": "High Risk",
        "heatmap.legend.start": "Low Risk",
        "heatmap.subtitle": "No. of Entities",
        "heatmap.tag.actionsOnObjective": "Actions on Objective",
        "heatmap.tag.commandAndControl": "Command and Control",
        "heatmap.tag.delivery": "Delivery",
        "heatmap.tag.lateralMovement": "Lateral Movement",
        "heatmap.tag.reconnaissance": "Reconnaissance",
        "heatmap.title": "Threat Tactics",
        "historical.setLabelFor": "Set Label for {entity_name}",
        "historical.table.date": "Date",
        "historical.table.entity_name": "Entity",
        "historical.table.id": "Id",
        "historical.table.predicted_tag": "Predictive Threat Tactic",
        "historical.table.user_tag": "Feedback",
        "historical.title": "Historical Behaviour Map",
        "labels.apply": "Apply",
        "labels.cancel": "Cancel",
        "labels.delete": "Delete",
        "labels.details": "Details",
        "labels.export": "Export CSV",
        "labels.import": "Import CSV",
        "labels.save": "Save",
        "labels.table.entity_name": "Entity Name",
        "labels.table.id": "Actions",
        "labels.table.pipelinev2": "Entity",
        "labels.table.start_time_x": "Timestamp",
        "labels.table.status": "Status",
        "labels.table.tactic": "Tactic Name",
        "labels.table.type": "Type",
        "labels.upload": "Upload",
        "logManager.addDataSource.device.deviceIP": "Device IP",
        "logManager.addDataSource.device.deviceName": "Device Name",
        "logManager.addDataSource.device.groupName": "Group Name",
        "logManager.addDataSource.errorMessage.required": "This field is required",
        "logManager.addDataSource.input.accessKey": "Access Key",
        "logManager.addDataSource.input.bucketName": "Bucket Name",
        "logManager.addDataSource.input.file": "Choose File",
        "logManager.addDataSource.input.fileName": "File Name",
        "logManager.addDataSource.input.folderName": "Folder Name",
        "logManager.addDataSource.input.format": "Format",
        "logManager.addDataSource.input.path": "Choose File",
        "logManager.addDataSource.input.port": "Port",
        "logManager.addDataSource.input.type": "Type",
        "logManager.addDataSource.input.udpPort": "UDP Port",
        "logManager.addDataSource.input.version": "Version",
        "logManager.addDataSource.output.path": "Path",
        "logManager.addDataSource.output.target": "Target",
        "logManager.addDataSource.output.topic": "Topic",
        "logManager.deleteDataSource.confirmation": "Are you sure you want to delete this Data Source?",
        "logManager.firstIngestion": "First Ingestion",
        "logManager.form.clientError": "Format Data Required from client/BE team",
        "logManager.form.inputIngestMechanism": "Input Ingest Mechanism",
        "logManager.form.outputIngestMechanism": "Output Ingest Mechanism",
        "logManager.form.timezoneMessage": "All devices have to be UTC or Reporting Timezone",
        "logManager.form.title": "Add Data Source",
        "logManager.lastUpdate": "Last Update",
        "logManager.legend.entities": "Entities",
        "logManager.legend.storage": "Storage",
        "logManager.logSources": "Log Sources",
        "logManager.noOfEntities": "No. of Entities",
        "logManager.noOfEvents": "No. of Events",
        "logManager.storage": "Storage",
        "logManager.table.actions": "Actions",
        "logManager.table.dataSourceCategory": "Category",
        "logManager.table.date": "Date Created",
        "logManager.table.debug": "Debug",
        "logManager.table.deviceName": "Device",
        "logManager.table.firstIngestion": "First Ingestion",
        "logManager.table.lastUpdate": "Last Update",
        "logManager.table.noEvents": "No. of Events",
        "logManager.table.source": "Log Source",
        "logManager.table.status": "Status",
        "logManager.table.storage": "Storage",
        "logManager.table.subType/format": "SubType/Format",
        "logManager.table.timeZone": "Time Zone",
        "logManager.table.type": "Type",
        "logManager.table.version": "Version",
        "logManager.viewDataSource.header": "Details",
        "login.form.password.error": "Password is required!",
        "login.form.password.label": "Password",
        "login.form.submit": "Log In",
        "login.form.username.error": "Username is required!",
        "login.form.username.label": "Username",
        "login.title": "Log In",
        "logout.message": "You have been successfully logged out!",
        "logsStats.filtered": "Filtered Logs",
        "logsStats.total": "Total Logs",
        "malicious.table.actions": "Actions",
        "malicious.table.entity_name": "Entity",
        "malicious.table.hash": "Hash",
        "malicious.table.score": "Score",
        "malicious.table.start_time_formatted": "Log Date",
        "malicious.table.threat": "Threat Tactic",
        "malicious.toMaliciousListing": "See Malicious Listing",
        "model.actions.delete": "Delete",
        "model.actions.deploy": "Deploy",
        "model.actions.details": "Details",
        "model.actions.mute": "Silent ON",
        "model.actions.retrain": "Retrain",
        "model.actions.speaker": "Silent OFF",
        "model.actions.undeploy": "Undeploy",
        "model.deployment.heading": "Deploy model for { featureType }",
        "model.details.algo.fineSet": "Tune: { fineSet }",
        "model.details.algo.name": "Algorithm:  { name }",
        "model.details.algo.strategy": "Data strategy: { strategy }",
        "model.details.batchDate": "{ batchDate }",
        "model.details.depTS": "{ depTS }",
        "model.details.heading": "{ name }",
        "model.details.type": "{ type } model for { featureType }",
        "model.features.addFeatures": "Add Features",
        "model.features.cancel": "Cancel",
        "model.features.featureSelectedCount": "<span style=\\"color: #F81C1C\\">{count}</span> Features Selected",
        "model.features.features": "Features",
        "model.features.filters": "Filters",
        "model.features.noFeatures": "No features to display",
        "notification.text": "{line}",
        "paragraph.code.error": "Error",
        "paragraph.code.success": "Success",
        "paragraph.noTimestamp": "Last updated at {date}.",
        "paragraph.status.error": "Error",
        "paragraph.status.finished": "Finished",
        "paragraph.status.paragraph.status.unknown": "Unknown",
        "paragraph.status.pending": "Pending",
        "paragraph.status.ready": "Ready",
        "paragraph.status.running": "Running",
        "paragraph.timestamp": "Took {eta} sec. Last updated at {date}.",
        "performance.entity": "Organise by Entity Type",
        "performance.label": "Organise by Label Type",
        "performance.label.count": "<span class=\\"highlight\\">{count}</span> Labels",
        "performance.label.top": "Marked items (as of {date})",
        "performance.label.types": "<span class=\\"highlight\\">{count}</span> Types",
        "performance.legend.label": "Labels",
        "performance.legend.precision": "Precision",
        "performance.precision.top": "Overall Rating (as of {date})",
        "pipeline.barchart.title": "Predictions by Date (Last { duration } { number })",
        "pipeline.chart.noData": "No Malicious threats detected in this period",
        "pipeline.piechart.title": "{threats} Predicted Threats (out of {entities} Entities) for {date}",
        "pipeline.setLabel": "Set Label",
        "pipeline.setLabelFor": "Set Label for {entityName}",
        "pipeline.table.description": "Description",
        "pipeline.table.domain": "Domain",
        "pipeline.table.dstip": "Destionation IP",
        "pipeline.table.feedback_tag_name": "Feedback",
        "pipeline.table.hash": "Hash",
        "pipeline.table.ip": "IP Address",
        "pipeline.table.map_users": "Users",
        "pipeline.table.predicted_prob": "Attack Probability",
        "pipeline.table.predicted_tag_name": "Prediction",
        "pipeline.table.score": "Outlier Score",
        "pipeline.table.srcip": "SourceIP",
        "pipeline.table.top_features": "Feedback",
        "pipeline.table.url": "URL",
        "pipeline.table.user": "User",
        "pipeline.title": "Pipeline",
        "predictions.selected.actions": "Actions",
        "predictions.selected.date": "Date",
        "predictions.selected.entity": "Entity",
        "predictions.selected.threat": "Threat",
        "predictions.selected.title": "Selected Entity",
        "predictions.tabs.labeled": "Label History",
        "predictions.tabs.unlabeled": "<span>{count}</span> Unlabeled Graph Entities",
        "reports.addNewRule": "Add new rule",
        "reports.apply": "Apply",
        "reports.cancel": "Cancel",
        "reports.close": "Close",
        "reports.delete": "Delete",
        "reports.deleteReport.confirmation": "Are you sure you want to delete { reportName } report?",
        "reports.deleteReport.title": "Delete report - { reportName }",
        "reports.detail.viewDetail": "View Details",
        "reports.details": "Details",
        "reports.download": "Download",
        "reports.downloadCSV": "Click to download CSV",
        "reports.edit": "Edit",
        "reports.noDataFound": "No Data Found",
        "reports.onDemandHeading": "Run report",
        "reports.reportDetail.title": "{ reportDetailTitle }",
        "reports.reportModal.title": "{ modalTitle }",
        "reports.reportModalButton": "Add new report",
        "reports.reset": "Reset",
        "reports.save": "Save",
        "reports.table.id": "Actions",
        "reports.table.name": "Name",
        "reports.table.pipeline": "Module",
        "reports.table.update_time": "Last Updated",
        "reports.title": "Custom Reports",
        "reports.viewDetail.backButtonText": "Back to Custom Reports",
        "reports.viewDetail.mode": "{mode}",
        "reports.viewDetail.pipeline": "{pipeline}",
        "reports.viewDetail.rulesCaption": "Choosen rules",
        "reports.viewDetail.title": "Report Details",
        "resource.activateDeactivate": "<span style=\\"text-transform: capitalize;\\">{type}</span>",
        "resource.add": "Add New Resource",
        "resource.cancel": "Cancel",
        "resource.manageResource": "Are you sure you want to {type} the <span style=\\"font-weight: 900\\">'{name}'</span> resource?",
        "resource.message": "*{message}",
        "resource.save": "Save changes",
        "resource.title": "Manage Resources",
        "resource.type": "{type} Resource",
        "rule.cancel": "Cancel",
        "rule.delete": "Delete",
        "rule.deleteRule.confirmation": "Are you sure you want to delete { ruleName } rule ?",
        "rule.deleteRule.title": "Delete rule - { ruleName }",
        "rule.details": "Details",
        "rule.edit": "Edit",
        "rule.message": "*{message}",
        "rule.type": "{ type } rule",
        "suspicious.listByMethod": "Suspicious entities by method",
        "suspicious.listByType": "Suspicious entites by type",
        "suspicious.setLabel": "Set label",
        "suspicious.table.actions": "Actions",
        "suspicious.table.entity_name": "Entity",
        "suspicious.table.global_rank": "Global Rank",
        "suspicious.table.id": "Id",
        "suspicious.table.method_name": "Type",
        "suspicious.table.method_score": "Score",
        "suspicious.table.start_time_formatted": "Log Date",
        "suspicious.toSuspiciousListing": "See Suspicious Listing",
        "tabs.count.correlations": "( {count} Clusters )",
        "tabs.count.malicious": "( {count} Entities )",
        "tabs.count.suspicious": "( {count} Entities )",
        "tooltip.addLabel": "Add Label",
        "tooltip.delete": "Delete",
        "tooltip.details": "Details",
        "tooltip.disable": "Disable",
        "tooltip.enable": "Enable",
        "tooltip.icon-select-box": "Show/Hide Elements",
        "tooltip.investigate": "Investigate entity",
        "tooltip.investigateCluster": "Investigate Cluster",
        "tooltip.openNewTab": "Open in new tab",
        "tooltip.removeLabel": "Remove Label",
        "tooltip.seeDetails": "See details",
        "upload.error": "*{message}",
        "vulnerability.table.plugin": "Plugin no.",
        "vulnerability.table.plugin_name": "Vulnerability type",
        "vulnerability.table.severity": "Severity",
        "vulnerabilityReport.title": "Vulnerability Report Details",
      },
      "now": [Function],
      "textComponent": "span",
    }
  }
  isDomainInfoDataLoaded={true}
>
  <Section
    className=""
    dropDownOptions={Array []}
    dropDownState={false}
    dropdown={false}
    expandable={false}
    expandableView={null}
    filterFeatureList={[Function]}
    isDraggable={true}
    loaded={true}
    modalStyle={Object {}}
    onDropDownClick={[Function]}
    onDropDownSelection={[Function]}
    onModalOpen={[Function]}
    selectedDropDown={Array []}
    size="small"
    title="Domain Information"
  >
    <div
      className="section section--small +"
    >
      <div
        className="section__header"
      >
        <span
          className="section__title"
        >
          Domain Information
        </span>
        <span
          className="icon-drag"
        />
      </div>
      <div
        className="section__content"
      >
        <div
          className="section__children"
        >
          <List
            behaviorType=""
            columnFormat={Array []}
            customClass={
              Object {
                "base": "standard-card",
                "modifiers": Array [
                  "+outlayed",
                  "+rows-highlight",
                ],
              }
            }
            data={
              Object {
                "cdn_info": "Amazon Cloudfront",
                "community_tag": "not malicious",
                "community_votes": 1,
                "expiration_date": "2022-10-31 04:00:00",
                "geo_location": Object {
                  "address": "P.O. Box 8102",
                  "city": "Reno",
                  "country": "US",
                  "state": "NV",
                  "zipcode": "89507",
                },
                "handlers": Object {
                  "openResolution": [Function],
                  "openSubdomains": [Function],
                },
                "registrar": "MarkMonitor, Inc.",
                "registration_date": "1994-11-01 05:00:00",
                "resolutions": Array [
                  Object {
                    "ip_address": "205.251.242.54",
                    "last_resolved": "2013-08-27",
                  },
                  Object {
                    "ip_address": "72.21.215.232",
                    "last_resolved": "2014-10-24",
                  },
                ],
                "subdomains": Array [
                  "gru-orca.amazon.com",
                  "vdp.amazon.com",
                ],
              }
            }
            endDate={"2018-01-01T23:59:59.999Z"}
            handlers={Object {}}
            pipeline=""
            startDate={"2018-01-01T00:00:00.000Z"}
            tabData={Array []}
            type="@@listComponent/domain_info"
          >
            <div
              className="card standard-card +outlayed +rows-highlight"
            >
              <ListItem
                customClass="card__item"
                data={
                  Object {
                    "key": "",
                    "name": "CDN Information",
                    "value": "Amazon Cloudfront",
                  }
                }
                handlers={Object {}}
                key="listitem-0"
                type="@@listComponent/domain_info"
              >
                <div
                  className="card__item"
                >
                  <div
                    className="card__item__key"
                  >
                    <span
                      className="card__item__key__label"
                    >
                      <span>
                        CDN Information
                      </span>
                      <span>
                        :
                      </span>
                    </span>
                  </div>
                  <span
                    className="card__item__value"
                  >
                    Amazon Cloudfront
                  </span>
                </div>
              </ListItem>
              <ListItem
                customClass="card__item"
                data={
                  Object {
                    "key": "comunity_tag",
                    "name": "Comunity Tag",
                    "value": "Not Malicious",
                  }
                }
                handlers={Object {}}
                key="listitem-1"
                type="@@listComponent/domain_info"
              >
                <div
                  className="card__item"
                >
                  <div
                    className="card__item__key"
                  >
                    <span
                      className="card__item__key__label"
                    >
                      <span>
                        Comunity Tag
                      </span>
                      <span>
                        :
                      </span>
                    </span>
                  </div>
                  <span
                    className="card__item__value"
                  >
                    Not Malicious
                  </span>
                </div>
              </ListItem>
              <ListItem
                customClass="card__item"
                data={
                  Object {
                    "key": "domain_resolution",
                    "name": "Domain Resolution",
                    "value": <span
                      className="domainLink"
                      onClick={[Function]}
                    >
                      <FormattedMessage
                        id="evp.seeDetails"
                        values={Object {}}
                      />
                    </span>,
                  }
                }
                handlers={Object {}}
                key="listitem-2"
                type="@@listComponent/domain_info"
              >
                <div
                  className="card__item"
                >
                  <div
                    className="card__item__key"
                  >
                    <span
                      className="card__item__key__label"
                    >
                      <span>
                        Domain Resolution
                      </span>
                      <span>
                        :
                      </span>
                    </span>
                  </div>
                  <span
                    className="card__item__value"
                  >
                    <span
                      className="domainLink"
                      onClick={[Function]}
                    >
                      <FormattedMessage
                        id="evp.seeDetails"
                        values={Object {}}
                      >
                        <span>
                          See Details
                        </span>
                      </FormattedMessage>
                    </span>
                  </span>
                </div>
              </ListItem>
              <ListItem
                customClass="card__item"
                data={
                  Object {
                    "key": "subdomains",
                    "name": "Subdomains",
                    "value": <span
                      className="domainLink"
                      onClick={[Function]}
                    >
                      <FormattedMessage
                        id="evp.seeDetails"
                        values={Object {}}
                      />
                    </span>,
                  }
                }
                handlers={Object {}}
                key="listitem-3"
                type="@@listComponent/domain_info"
              >
                <div
                  className="card__item"
                >
                  <div
                    className="card__item__key"
                  >
                    <span
                      className="card__item__key__label"
                    >
                      <span>
                        Subdomains
                      </span>
                      <span>
                        :
                      </span>
                    </span>
                  </div>
                  <span
                    className="card__item__value"
                  >
                    <span
                      className="domainLink"
                      onClick={[Function]}
                    >
                      <FormattedMessage
                        id="evp.seeDetails"
                        values={Object {}}
                      >
                        <span>
                          See Details
                        </span>
                      </FormattedMessage>
                    </span>
                  </span>
                </div>
              </ListItem>
            </div>
          </List>
        </div>
      </div>
    </div>
  </Section>
</DomainInfoCard>
`;
